/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "overveiwWidget".
 */
export type OverveiwWidget =
  | {
      value?: number | null;
      achivement?: string | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    blogpages: Blogpage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    homepage: Homepage;
    aboutpage: Aboutpage;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogpages".
 */
export interface Blogpage {
  id: string;
  name: string;
  slug: string;
  mainHeading: string;
  subHeading: string;
  heroImage: string | Media;
  layout?: BlogPara[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPara".
 */
export interface BlogPara {
  paraHeading: string;
  paraText?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogpara';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'blogpages';
        value: string | Blogpage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  mainHeading: string;
  subHeading: string;
  overveiwWidget?: OverveiwWidget;
  heroImage: string | Media;
  basicCardSection?: BasicCard[] | null;
  firstTextBanner: {
    subgreenText: string;
    mainText: string;
  };
  priceCard?: PriceCard[] | null;
  secondTextBanner: {
    subgreenText: string;
    mainText: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BasicCard".
 */
export interface BasicCard {
  heading: string;
  subheading: string;
  cardImage: string | Media;
  reverse?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'basiccard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PriceCard".
 */
export interface PriceCard {
  quantityOne: number;
  productOne: string;
  quantityTwo: number;
  productTwo: string;
  priceMain: number;
  priceSuper: number;
  duration: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricecard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutpage".
 */
export interface Aboutpage {
  id: string;
  mainHeading: string;
  aboutImage: string | Media;
  subHeading: string;
  aboutCard?: AboutCard[] | null;
  greenTextBanner: string;
  overveiwWidget?: OverveiwWidget;
  subgreenText: string;
  mainBannerText: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutCard".
 */
export interface AboutCard {
  cardImage: string | Media;
  cardText: string;
  reverse: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'aboutcard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}